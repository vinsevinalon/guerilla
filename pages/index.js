import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { GraphQLClient, gql } from 'graphql-request';
import HeroComponent from './hero';
import AboutComponent from './about';
import FooterComponent from './footer';
import { useState, useMemo } from 'react';

export async function getStaticProps() {
    const endpoint = process.env.PREVIEW_ENDPOINT;
    const graphQLClient = new GraphQLClient(endpoint);
    graphQLClient.setHeader(
        'Authorization',
        `Bearer ${process.env.PREVIEW_TOKEN}`
    );

    const query = gql`
        {
            propertyCollection(limit: 6) {
                items {
                    id
                    title
                    address
                    category
                    image {
                        url
                    }
                }
            }
        }
    `;

    const data = await graphQLClient.request(query);
    return {
        props: { data }, // will be passed to the page component as props
    };
}

// create a filter function to filter the data by name

export default function Home(data) {
  const [category, setCategory] = useState(data);
  // create a filter function that will filter the data using category
  const filterData = (category) => {
      const filteredData = Object.values(data).filter((item) => {
          // get the category of the item
          const itemCategory = item.category;
          console.log(itemCategory);
          // if the category of the item is equal to the category passed to the function
          // then return the item
          if (itemCategory === category) {
              return item;
          }
      });
      // set the data to the filtered data
      setCategory(filteredData);
  };

  return (
      <div className={styles.container}>
          <Head>
              <title>Lugar</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
          </Head>

          <main className={styles.main}>
              <HeroComponent />
              <div className="container relative mx-auto pt-16">
                  <div className="items-center flex flex-wrap">
                      <div className="w-full lg:w-6/12 px-4 ml-auto mr-auto text-center">
                          <div className="pr-12">
                              <h1 className="font-semibold text-5xl">
                                  Properties
                              </h1>
                              <div className="filter-container">
                                  <div>Filter by Category:</div>
                                  <div>
                                      <select
                                          name="category-list"
                                          id="category-list"
                                          className="border border-gray-300 rounded-md filter-select"
                                          onChange={() => filterData(category)}
                                      >
                                          <option value="">All</option>
                                          <option value="Villa">Villa</option>
                                          <option value="Apartment">
                                              Apartment
                                          </option>
                                          <option value="Penthouse">
                                              Penthouse
                                          </option>
                                      </select>
                                  </div>
                              </div>
                              <p className="mt-4 text-lg">
                                  This is a simple example of a Landing Page
                              </p>
                          </div>
                      </div>
                  </div>
              </div>
              <div className={styles.grid}>
                  {data.data.propertyCollection.items.map(
                      (item, id) => (
                          console.log('item', item.category),
                          (
                              <a key={id} href="#" className={styles.card}>
                                  <Image
                                      src={item.image.url}
                                      alt={item.title}
                                      width={300}
                                      height={200}
                                      priority
                                  />
                                  <h3>{item.title}</h3>
                                  <p>{item.address}</p>
                              </a>
                          )
                      )
                  )}
              </div>
          </main>
          <AboutComponent />
          <FooterComponent />
      </div>
  );
}
